#!/bin/bash



# 2011/01/26:
# - OSCam start/stop/restart example script - http://www.streamboard.tv/wiki/OSCam/en/ShellCommands#Starting_and_stopping_OSCam

# 2018/07/16:
# - s3n0 edit (target file:  /etc/init.d/softcam)

# 2019/06/15
# - s3n0 edit
# - remake the logging concept (logging output via function)
# - some cosmetic improvements

# 2019/06/23
# - s3n0 edit
# - some changes in start/stop/restart functions

# 2020/02/19
# - s3n0 edit
# - improved and complete instructions how-to install the Oscam




# #######################  HOW-TO  #########################
#
# ----------------------------------------------------------
#      OpenATV 6.3  &  OpenPLi 7.2  (or similar Enigma)
# ----------------------------------------------------------
#
# 1)   Download the script directly from my github profile + also renaming filename from "softcam" to "softcam.oscam":
#         wget -O /etc/init.d/softcam.oscam --no-check-certificate https://github.com/s3n0/e2scripts/raw/master/softcam && chmod a+x /etc/init.d/softcam.oscam
#
# 2)   Copy your Oscam configuration files into the "/etc/tuxbox/config/oscam" folder (using the FTP connection)
#
# 3)   Download and prepare a binary file - for example with helping of the following bash script, you can download also the oscam binary file:
#         wget -q -O - --no-check-certificate "https://github.com/s3n0/e2scripts/raw/master/oscam-new-version-updater.sh" | bash
#
# 4)   Restart the set-top box via the GUI MENU or via the Shell:
#         reboot
#
# 5)   After restart, select and activate the particullar Softcam via the GUI-MENU:
#         MENU -> Info Panel -> Softcam Panel -> select Oscam by pressing the left / right buttons and activate with the green button
#
# ----------------------------------------------------------
#      All other or unknown Enigma distributions
# ----------------------------------------------------------
#
# 1)   Download the script directly from my github profile:
#         wget -O /etc/init.d/softcam --no-check-certificate https://github.com/s3n0/e2scripts/raw/master/softcam && chmod a+x /etc/init.d/softcam
#
# 2.A) If the "/etc/init.d/softcam" script auto start feature is not implemented in your Enigma2 then you must additionally create a symbolic link:
#         ln -sf /etc/init.d/softcam /etc/rc3.d/S90softcam
#      For remove the symbolic link you can simply delete this link:
#         rm -f /etc/rc3.d/S90softcam
#
# 2.B) You can also use the automated tool for adding (installing) the startup sym-links to all default run-levels:
#         update-rc.d softcam defaults 90
#      For remove (uninstall) startup sym-links from all run-levels use the following command:
#         update-rc.d -f softcam remove
#
# 3)   Copy your Oscam configuration files into the "/etc/tuxbox/config/oscam" folder (using the FTP connection)
#
# 4)   Download and prepare a binary file - for example with helping of the following bash script, you can download also the oscam binary file:
#         wget -q -O - --no-check-certificate "https://github.com/s3n0/e2scripts/raw/master/oscam-new-version-updater.sh" | bash
#
# 5)   Then restart the set-top box via the GUI MENU or via the Shell:
#         reboot
#
# #########################################################




# ####################  USER SETUP  ########################
# ----------------------------------------------------------
# SOFTCAM BINARY DIRECTORY:
softcam_bin_dir='/usr/bin'
# ----------------------------------------------------------
# SOFTCAM PROCESS NAME (BINARY FILE NAME):
softcam_bin_filename='oscam'
# ----------------------------------------------------------
# SOFTCAM ARGUMENTS:    (a note: argument "-c" for OSCam determines a configuration directory, for more info use "/usr/bin/oscam --help")
softcam_args='-b -r 2 -c /etc/tuxbox/config/oscam'
# ----------------------------------------------------------
# Waiting time to kill the softcam process by standard SIGTERM (-15). Then softcam process will be killed with force SIGKILL (-9).
softcam_kill_waiting=3
# ----------------------------------------------------------
# LOG FILE FOR THE SOFTCAM HANDLING:
softcam_logfile='/tmp/oscam_handling.log'
softcam_logfile_sizemax=45000       # max. file size [Bytes]
# ----------------------------------------------------------
# PRIVATE VARIABLES:
hrline='------------------------------------------------------------'
helptext="USAGE:     bash /etc/init.d/softcam <ARGUMENT>
ARGUMENT:  start......the process will be started only if it's not running
           restart....the process will be stopped only if it's running & then will be started
           stop.......stop and unload the $softcam_bin_filename service from memory"
# ----------------------------------------------------------
# ###############  END OF THE USER SETUP  ##################







# FUNCTIONS ************************************************

fLog() {
    if [[ $1 != *"-----"* ]]; then
        logmsg=`date '+%Y-%m-%d %H:%M:%S'`" $1"          # add a timestamp if it's not a separator line
    else
        logmsg="$1"
    fi
    
    #echo "$logmsg" > /dev/null                          ### null device   <---  log will disabled (do nothing)
    #echo "$logmsg" >> $softcam_logfile                  ### file
    #echo "$logmsg" >> $softcam_logfile 2>&1             ### file + stderr
    #echo "$logmsg" | tee -a $softcam_logfile            ### file + stdout(display)
    echo "$logmsg" 2>&1 | tee -a $softcam_logfile       ### file + stdout(display) + stderr
    
    #### reduction the log filesize, if neccessary (delete first 20 lines):
    if [ -f "$softcam_logfile" ] && [ $(stat -c%s "$softcam_logfile") -gt $softcam_logfile_sizemax ]; then sed -i -e 1,20d "$softcam_logfile"; fi
}

fStop() {
    if ! pidof $1 > /dev/null; then
        fLog "No $1 process is running."
    else
        fLog "Stopping $1..."
        fLog "...sending a default SIGTERM signal to PID $(pidof $1)"
        kill -15 $(pidof $1) > /dev/null
        sleep 0.8s       # changed from 1s to 0.8s, as the '/lib/python/Screens/SoftcamSetup.py' restarts the softcam script too quickly with the 'stop' argument and 1s later it immediately starts the script again with the argument 'start' i.e. without using the 'restart' argument ! unfortunately my softcam script is testing as the first normal softcam stopping, which can take about 0.3s-0.6s
        if pidof $1 > /dev/null; then
            i=1
            while expr $i != $softcam_kill_waiting > /dev/null
            do
                if pidof $1 > /dev/null; then
                    fLog "...waiting for termination: $i of max. $softcam_kill_waiting seconds"
                    sleep 1
                else
                    fLog "...$1 was successfully terminated using the default SIGTERM signal."
                    break
                fi
                i=`expr $i + 1`
            done
        else
            fLog "...$1 was successfully terminated using the default SIGTERM signal."
        fi
        if pidof $1 > /dev/null; then
            fLog "...sending a forced SIGKILL signal to $1 process"
            killall -9 $1 > /dev/null
            if pidof $1 > /dev/null; then
                fLog "...$1 was not killed by a forced SIGKILL signal! Probably a system error?!"
            else
                fLog "...$1 was killed using the forced SIGKILL signal."
            fi
        fi
    fi
}

fStart() {
    fLog "Starting $1..."
    if pidof $1 > /dev/null; then
        fLog "...$1 process has already started and is still running."
    else
        fLog "...command to execute:   $softcam_bin_dir/$1 $softcam_args"
        $softcam_bin_dir/$1 $softcam_args > /dev/null
        sleep 0.8s
        if pidof $1 > /dev/null; then
            fLog "...$1 was successfully started."
        else
            fLog "ERROR! $1 start failed!"
        fi
    fi
}

fRestart() {
    if pidof $1 > /dev/null; then fStop $1; fi       # start the process - the process will be stopped/killed only if it's running
    fStart $1
}





# CHECKING THE EXISTENCE OF THE BINARY/EXEC FILE

if [ ! -f "$softcam_bin_dir/$softcam_bin_filename" ]; then
    fLog "ERROR! Executable binary file '$softcam_bin_dir/$softcam_bin_filename' does not exist!"
    fLog "$hrline"
    exit 1
fi


# CALL FUNCTIONS ACCORDING TO INPUT ARGUMENTS OF BASH SCRIPT **************************

case "$1" in
    start)
        fStart "$softcam_bin_filename"
        fLog "$hrline"
        ;;
    stop)
        fStop "$softcam_bin_filename"
        fLog "$hrline"
        ;;
    restart|reload|force-reload)
        fRestart "$softcam_bin_filename"
        fLog "$hrline"
        ;;
    *)
        fLog "UNKNOWN OR MISSING PARAMETER !"
        echo "$helptext" >$(tty)
        fLog "$hrline"
        exit 1
        ;;
esac


exit 0
